<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>S.R.T</title>
  
  <subtitle>爱设计 | 爱前端 | 爱摄影 | 爱生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-14T09:15:53.002Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>SHEN REN TONG</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端兼容问题总结</title>
    <link href="http://yoursite.com/2019/09/20/%E5%89%8D%E7%AB%AF%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/09/20/前端兼容问题总结/</id>
    <published>2019-09-20T05:42:23.000Z</published>
    <updated>2019-11-14T09:15:53.002Z</updated>
    
    <content type="html"><![CDATA[<h3 id="vue遇到的input-框银行卡格式输入四位后光标错位的修复"><a href="#vue遇到的input-框银行卡格式输入四位后光标错位的修复" class="headerlink" title="vue遇到的input 框银行卡格式输入四位后光标错位的修复"></a>vue遇到的input 框银行卡格式输入四位后光标错位的修复</h3><pre><code>// pos 是输入的值长度_this.$nextTick(() =&gt; {   if (pos != -1) {      setTimeout(() =&gt; {      document.getElementById(&apos;accountInput&apos;).setSelectionRange(pos, pos); // 处理光标显示问题   }, 0);}</code></pre><h3 id="浏览器的window-open-打开新页面ie-11-不兼容的处理方式"><a href="#浏览器的window-open-打开新页面ie-11-不兼容的处理方式" class="headerlink" title="浏览器的window.open() 打开新页面ie 11 不兼容的处理方式"></a>浏览器的window.open() 打开新页面ie 11 不兼容的处理方式</h3><pre><code>var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串var isIE = userAgent.indexOf(&quot;compatible&quot;) &gt; -1 &amp;&amp; userAgent.indexOf(&quot;MSIE&quot;) &gt; -1; //判断是否IE&lt;11浏览器if (isIE) {   var gotolink = document.createElement(&quot;a&quot;);   gotolink.href = _this.wxCodeUrl;   gotolink.setAttribute(&quot;target&quot;, &quot;_blank&quot;);   document.body.appendChild(gotolink);   gotolink.click();}</code></pre><h3 id="手机兼容问题，手机键盘顶掉部分内容导致空白块"><a href="#手机兼容问题，手机键盘顶掉部分内容导致空白块" class="headerlink" title="手机兼容问题，手机键盘顶掉部分内容导致空白块"></a>手机兼容问题，手机键盘顶掉部分内容导致空白块</h3><pre><code>// vue 的处理方式this.$refs.replyInput.scrollIntoView(true); // replyInput是外层容器ref值// 原生的处理方式   document.querySelector(&quot;#body&quot;).scrollTop = 0; // #body是外层容器</code></pre><h3 id="判断是什么端打开，和唤醒app"><a href="#判断是什么端打开，和唤醒app" class="headerlink" title="判断是什么端打开，和唤醒app"></a>判断是什么端打开，和唤醒app</h3><pre><code>// 如果是pc端打开if (!/Android|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent){}// 各种端判断var browser = {versions: (function() {   var u = navigator.userAgent,   app = navigator.appVersion;   return {      trident: u.indexOf(&quot;Trident&quot;) &gt; -1 /*IE内核*/,      presto: u.indexOf(&quot;Presto&quot;) &gt; -1 /*opera内核*/,      webKit: u.indexOf(&quot;AppleWebKit&quot;) &gt; -1 /*苹果、谷歌内核*/,      gecko: u.indexOf(&quot;Gecko&quot;) &gt; -1 &amp;&amp; u.indexOf(&quot;KHTML&quot;) == -1 /*火狐内核*/,      mobile: !!u.match(/AppleWebKit.*Mobile.*/) /*是否为移动终端*/,      ios: !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/) /*ios终端*/,      android:      u.indexOf(&quot;Android&quot;) &gt; -1 ||      u.indexOf(&quot;Linux&quot;) &gt; -1 /*android终端或者uc浏览器*/,      iPhone: u.indexOf(&quot;iPhone&quot;) &gt; -1 /*是否为iPhone或者QQHD浏览器*/,      iPad: u.indexOf(&quot;iPad&quot;) &gt; -1 /*是否iPad*/,      webApp: u.indexOf(&quot;Safari&quot;) == -1 /*是否web应该程序，没有头部与底部*/,      souyue: u.indexOf(&quot;souyue&quot;) &gt; -1,      superapp: u.indexOf(&quot;superapp&quot;) &gt; -1,      weixin: u.toLowerCase().indexOf(&quot;micromessenger&quot;) &gt; -1,      Safari: u.indexOf(&quot;Safari&quot;) &gt; -1   };})(),language: (navigator.browserLanguage || navigator.language).toLowerCase()};// APP下使用唤醒微信方法phonegap.changeToWeixin();</code></pre><h3 id="银行卡的标准格式过滤正则-例如-：8888-8889-7776-6556-556"><a href="#银行卡的标准格式过滤正则-例如-：8888-8889-7776-6556-556" class="headerlink" title="银行卡的标准格式过滤正则 例如 ：8888 8889 7776 6556 556"></a>银行卡的标准格式过滤正则 例如 ：8888 8889 7776 6556 556</h3><pre><code>// 银行卡每四位空一格 原生处理方式let cardID = &apos;8888888977766556556&apos;cardID = cardID.replace(/\s/g,&apos;&apos;).replace(/\D/g,&apos;&apos;).replace(/(\d{4})(?=\d)/g,&quot;$1 &quot;)alert(&apos;最后输出cardID：8888 8889 7776 6556 556&apos;)// vux ui 框架方式，mask可以自定义文本的显示格式&lt;x-input v-model=&quot;account&quot; :type=&quot;&apos;tel&apos;&quot;  :mask=&quot;&apos;9999 9999 9999 9999 999&apos;&quot;&gt;&lt;/x-input&gt;</code></pre><h3 id="vue新建一个全局的的过滤器"><a href="#vue新建一个全局的的过滤器" class="headerlink" title="vue新建一个全局的的过滤器"></a>vue新建一个全局的的过滤器</h3><pre><code>第一步：新建一个filter.es6 文件第二步：在filter.es6文件里面写一个或者多个过滤器export function filter1 (value) { // 过滤器1   if (typeof value === &apos;undefined&apos; || value === &apos;&apos; || value === null || value === &apos;undefined&apos;) {      return rank+1   }  }export function filter2 (value) { // 过滤器1   if (typeof value === &apos;undefined&apos; || value === &apos;&apos; || value === null || value === &apos;undefined&apos;) {      return rank+1   }  }第三步：全局过滤器注册，在main.js 头部写入这段遍历注册Object.keys(filters).forEach(key =&gt; {    Vue.filter(key, filters[key])})第四步：1.标签里面调用&lt;i class=&quot;title&quot; &gt;{{item | filter1}}&lt;/i&gt;2.逻辑代码里面调用 filter.filter1(val)</code></pre><h3 id="vue本地设置跨域代理"><a href="#vue本地设置跨域代理" class="headerlink" title="vue本地设置跨域代理"></a>vue本地设置跨域代理</h3><pre><code>第一步：打开/config/index.js文件第二步：找到dev:{} 在里面添加如下代码proxyTable: {  // 设置跨域   &apos;/amway-v-shopping&apos;: {   target: &apos;https://cn3ewalletqa.amwaynet.com.cn/amway-v-shopping/&apos;,  //目标接口域名   changeOrigin: true,  //是否跨域   pathRewrite: {   &apos;^/amway-v-shopping&apos;: &apos;/&apos;   //重写接口   }}</code></pre><h3 id="vue全局定义环境变量使用"><a href="#vue全局定义环境变量使用" class="headerlink" title="vue全局定义环境变量使用"></a>vue全局定义环境变量使用</h3><pre><code>1.打开这个文件：config/prod.env.js 添加一个变量weiXinAccountUrllet _export = {   weiXinAccountUrl:&apos;http://baiud.com&apos;}2.其他页面调用weiXinAccountUrl:    process.env.weiXinAccountUrl</code></pre><h3 id="vue-app中唤醒支付宝授权"><a href="#vue-app中唤醒支付宝授权" class="headerlink" title="vue app中唤醒支付宝授权"></a>vue app中唤醒支付宝授权</h3><pre><code>phonegap.callAliAuth(code, (aliData) =&gt; { // 唤醒支付宝授权   var _aliDataResult = {         &quot;auth_code&quot;:&apos;&apos;,         &quot;result_code&quot;:&apos;&apos;   }   if (aliData.resultStatus == &apos;9000&apos; || aliData.status === &apos;9000&apos;)  {      aliData.result.split(&apos;&amp;&apos;).forEach(item =&gt; {         var _items = item.split(&apos;=&apos;);         if (typeof _aliDataResult[_items[0]] !== &apos;undefined&apos;) {         _aliDataResult[_items[0]] = _items[1];         }      });      if (_aliDataResult.result_code == &apos;200&apos;) { // 支付宝授权成功      } else {      }      } else {   }   }, (error) =&gt; {});</code></pre><h3 id="vue-app中唤醒微信授权"><a href="#vue-app中唤醒微信授权" class="headerlink" title="vue app中唤醒微信授权"></a>vue app中唤醒微信授权</h3><pre><code>phonegap.wechatOAuth(data =&gt; { // 唤醒微信授权   if (data.result &amp;&amp; data.result == &quot;Y&quot;) { // 微信授权成功之后   } else {      if (data.msg &amp;&amp; data.msg.indexOf(&quot;WX not installed&quot;) != -1) {          //未安装微信      }   }});</code></pre><h3 id="异步请求的不可忽视的一点，异步请求的方法相应慢导致不进入判断"><a href="#异步请求的不可忽视的一点，异步请求的方法相应慢导致不进入判断" class="headerlink" title="异步请求的不可忽视的一点，异步请求的方法相应慢导致不进入判断"></a>异步请求的不可忽视的一点，异步请求的方法相应慢导致不进入判断</h3><pre><code>let name = {}queryWXUserinfo(){ // 异步方法let _this = this_this.showLoading();_this.$http.post(...api.queryWXUserinfo({code:code})).then(res =&gt; {   _this.hideLoading();   if (res.data.succeeded === true) {       _this.PCWXInfo = res.data.result   }}).catch(() =&gt; {   _this.hideLoading();   _this.$store.commit(&apos;UPDATE_NETERROR_SHOW&apos;, true);});},name = _this.PCWXInfo.nameif(name+6 === 9){ // 如果此处的异步方法没有反回来值那就不会进入此块   // 执行接下来要做的事}</code></pre><h3 id="vscode前端开发软件导致发热，在code-》preferences-》settings-json加以下代码"><a href="#vscode前端开发软件导致发热，在code-》preferences-》settings-json加以下代码" class="headerlink" title="vscode前端开发软件导致发热，在code-》preferences -》settings.json加以下代码"></a>vscode前端开发软件导致发热，在code-》preferences -》settings.json加以下代码</h3><pre><code>{   &quot;explorer.confirmDelete&quot;: false,   &quot;files.autoSave&quot;: &quot;off&quot;,   &quot;workbench.colorTheme&quot;: &quot;Visual Studio Dark&quot;,   &quot;search.followSymlinks&quot;: false,   &quot;files.exclude&quot;: {      &quot;**/.git&quot;: true,      &quot;**/.svn&quot;: true,      &quot;**/.hg&quot;: true,      &quot;**/CVS&quot;: true,      &quot;**/.DS_Store&quot;: true,      &quot;**/tmp&quot;: true,      &quot;**/node_modules&quot;: true,      &quot;**/bower_components&quot;: true   },   &quot;files.watcherExclude&quot;: {      &quot;**/.git/objects/**&quot;: true,      &quot;**/.git/subtree-cache/**&quot;: true,      &quot;**/node_modules/**&quot;: true,      &quot;**/tmp/**&quot;: true,      &quot;**/bower_components/**&quot;: true   }}</code></pre><h3 id="Edge-浏览器-localStorage-setItem值bug"><a href="#Edge-浏览器-localStorage-setItem值bug" class="headerlink" title="Edge 浏览器 localStorage.setItem值bug"></a>Edge 浏览器 localStorage.setItem值bug</h3><pre><code>处理方法：   localStorage.setItem的时候不能正常setItem要先localStorage.removeItem</code></pre><h3 id="IE-11-浏览器-夸窗口共享的时候取不到localStorage的值"><a href="#IE-11-浏览器-夸窗口共享的时候取不到localStorage的值" class="headerlink" title="IE 11 浏览器 夸窗口共享的时候取不到localStorage的值"></a>IE 11 浏览器 夸窗口共享的时候取不到localStorage的值</h3><pre><code>处理方法：   localStorage.setItem(&apos;itemVal&apos;, &apos;&apos;) // 随便setItem一个值</code></pre><h3 id="最新的ios-13版本的系统-border-radius的圆角出现倒换，就是设置左上角出现圆角在左下角的情况"><a href="#最新的ios-13版本的系统-border-radius的圆角出现倒换，就是设置左上角出现圆角在左下角的情况" class="headerlink" title="最新的ios 13版本的系统 border-radius的圆角出现倒换，就是设置左上角出现圆角在左下角的情况"></a>最新的ios 13版本的系统 border-radius的圆角出现倒换，就是设置左上角出现圆角在左下角的情况</h3><pre><code>处理方法：   1.-webkit-overflow-scrolling: none;   2.或者是去掉-webkit-overflow-scrolling: none这个属性</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;vue遇到的input-框银行卡格式输入四位后光标错位的修复&quot;&gt;&lt;a href=&quot;#vue遇到的input-框银行卡格式输入四位后光标错位的修复&quot; class=&quot;headerlink&quot; title=&quot;vue遇到的input 框银行卡格式输入四位后光标错位的修复&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Markdown 基本语法</title>
    <link href="http://yoursite.com/2019/06/14/Markdown-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2019/06/14/Markdown-基本语法/</id>
    <published>2019-06-14T06:50:00.000Z</published>
    <updated>2019-06-14T10:58:10.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>目录</p><blockquote><p>Markdown是什么？<br>谁创造了它？<br>为什么要使用它？<br>怎么使用？<br>谁在用？<br>尝试一下</p></blockquote></blockquote><hr><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h4 id="1-Markdown是什么？"><a href="#1-Markdown是什么？" class="headerlink" title="1. Markdown是什么？"></a>1. Markdown是什么？</h4><p>  Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。<br>  Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。</p><h3 id="2-谁创造了它？"><a href="#2-谁创造了它？" class="headerlink" title="2. 谁创造了它？"></a>2. 谁创造了它？</h3><p>  它由Aaron Swartz和John Gruber共同设计，Aaron Swartz就是那位于去年（2013年1月11日）自杀,有着开挂一般人生经历的程序员。维基百科对他的介绍是：软件工程师、作家、政治组织者、互联网活动家、维基百科人。</p><p>  他有着足以让你跪拜的人生经历：</p><p>  14岁参与RSS 1.0规格标准的制订。<br>  2004年入读斯坦福，之后退学。<br>  2005年创建Infogami，之后与Reddit合并成为其合伙人。<br>  2010年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。<br>  2011年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。<br>  2013年1月自杀身亡。</p><p>  <img src="/images/aaronSwartz.jpg" alt="Aaron Swartz"><br>天才都有早逝的归途。</p><h3 id="3-为什么要使用它？"><a href="#3-为什么要使用它？" class="headerlink" title="3. 为什么要使用它？"></a>3. 为什么要使用它？</h3><ul><li>它是易读（看起来舒服）、易写（语法简单）、易更改纯文本。处处体现着极简主义的影子。</li><li>兼容HTML，可以转换为HTML格式发布。</li><li>跨平台使用。</li><li>越来越多的网站支持Markdown。</li><li>更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）</li><li>摆脱Word（我不是认真的）。</li></ul><h3 id="4-怎么使用？"><a href="#4-怎么使用？" class="headerlink" title="4. 怎么使用？"></a>4. 怎么使用？</h3><p>如果不算扩展，Markdown的语法绝对简单到让你爱不释手。</p><p>Markdown语法主要分为如下几大部分：<br>标题，段落，区块引用，代码区块，强调，列表，分割线，链接，图片，反斜杠 \，符号’`’。</p><p>4.1 标题<br>两种形式：<br>1）使用=和-标记一级和二级标题。</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>效果：</p><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><p>2）使用#，可表示1-6级标题，记得#后面要加空格。</p><pre><code>###### 六级标题# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题</code></pre><p>效果：</p><h1 id="一级标题-2"><a href="#一级标题-2" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-2"><a href="#二级标题-2" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h3 id="4-2-段落"><a href="#4-2-段落" class="headerlink" title="4.2 段落"></a>4.2 段落</h3><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）。</p><h3 id="4-3-区块引用"><a href="#4-3-区块引用" class="headerlink" title="4.3 区块引用"></a>4.3 区块引用</h3><p>在段落的每行或者只在第一行使用符号&gt;,还可使用多个嵌套引用，如：</p><pre><code>&gt; 区块引用&gt;&gt; 嵌套引用</code></pre><p>效果：</p><blockquote><p>区块引用</p><blockquote><p>嵌套引用</p></blockquote></blockquote><h3 id="4-4-代码区块-注意-需要和普通段落之间存在空行。"><a href="#4-4-代码区块-注意-需要和普通段落之间存在空行。" class="headerlink" title="4.4 代码区块,注意:需要和普通段落之间存在空行。"></a>4.4 代码区块,注意:需要和普通段落之间存在空行。</h3><p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如<br>普通段落：</p><pre><code>void main(){printf(“Hello, Markdown.”);}</code></pre><p>代码区块：</p><pre><code>void main(){    printf(&quot;Hello, Markdown.&quot;);}</code></pre><h3 id="4-5-强调"><a href="#4-5-强调" class="headerlink" title="4.5 强调"></a>4.5 强调</h3><p>在强调内容两侧分别加上*或者_，如：</p><pre><code>*斜体*，_斜体_**粗体**，__粗体__</code></pre><p>效果：</p><p><em>斜体</em>，_体_<br><strong>粗体</strong>，<strong>粗体</strong></p><h3 id="4-6-列表"><a href="#4-6-列表" class="headerlink" title="4.6 列表"></a>4.6 列表</h3><p>使用·、+、或-标记无序列表，如：</p><pre><code>-（+*） 第一项-（+*） 第二项-（+*）第三项</code></pre><ul><li>注意：标记后面最少有一个_空格_或制表符。若不在引用区块中，必须和前方段落之间存在空行。</li></ul><p>效果：</p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>有序列表的标记方式是将上述的符号换成数字,并辅以.，如：<br>        1 . 第一项<br>        2 . 第二项<br>        3 . 第三项</p><p>效果：<br>1 . 第一项<br>2 . 第二项<br>3 . 第三项<br>4.7 分割线<br>分割线最常使用就是三个或以上*，还可以使用-和_。</p><p>4.8 链接<br>链接可以由两种形式生成：<strong>行内式</strong> 和 <strong>参考式</strong>。<br>行内式：</p><pre><code>[younghz的Markdown库](https:://github.com/younghz/Markdown “Markdown”)。</code></pre><p>效果：</p><p><a href="https:://github.com/younghz/Markdown “Markdown”" target="_blank" rel="noopener">younghz的Markdown库</a>。</p><p>参考式：</p><blockquote><p>[younghz的Markdown库1][1]<br>[younghz的Markdown库2][2]<br>[1]:https:://github.com/younghz/Markdown “Markdown”<br>[2]:https:://github.com/younghz/Markdown “Markdown”</p></blockquote><p>效果：</p><p>[1]:https:://github.com/younghz/Markdown “Markdown”<br>[2]:https:://github.com/younghz/Markdown “Markdown”</p><ul><li>注意：上述的[1]:https:://github.com/younghz/Markdown “Markdown”不出现在区块中。</li></ul><h3 id="4-9-图片"><a href="#4-9-图片" class="headerlink" title="4.9 图片"></a>4.9 图片</h3><p>添加图片的形式和链接相似，只需在链接的基础上前方加一个！。</p><h3 id="4-10-反斜杠"><a href="#4-10-反斜杠" class="headerlink" title="4.10 反斜杠\"></a>4.10 反斜杠\</h3><p>相当于反转义作用。使符号成为普通符号。</p><h3 id="4-11-符号’-’"><a href="#4-11-符号’-’" class="headerlink" title="4.11 符号’`’"></a>4.11 符号’`’</h3><p>起到标记作用。如：</p><pre><code>`ctrl+a`</code></pre><p>效果：</p><p>ctrl+a</p><h3 id="5-谁在用？"><a href="#5-谁在用？" class="headerlink" title="5. 谁在用？"></a>5. 谁在用？</h3><p>Markdown的使用者：</p><ul><li>GitHub</li><li>简书</li><li>Stack Overflow</li><li>Apollo</li><li>Moodle</li><li>Reddit<br>等等 …….</li></ul><h3 id="尝试一下"><a href="#尝试一下" class="headerlink" title=". 尝试一下"></a>. 尝试一下</h3><ul><li><strong>Chrome</strong>下的插件诸如stackedit与markdown-here等非常方便，也不用担心平台受限。</li><li><strong>在线的dillinger.io</strong>评价也不错</li><li><strong>Windowns</strong>下的MarkdownPad也用过，不过免费版的体验不是很好。</li><li><strong>Mac</strong>下的Mou是国人贡献的，口碑很好。</li><li><strong>Linux</strong>下的ReText不错。<br><strong>当然，最终境界永远都是笔下是语法，心中格式化 :)。</strong></li></ul><p>注意：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。<br>虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber]<br>(<a href="http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/" target="_blank" rel="noopener">http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/</a> )。</p><p>以上基本是所有traditonal markdown的语法。</p><p>其它：</p><p>列表的使用(非traditonal markdown)：</p><p>用|表示表格纵向边界，表头和表内容用-隔开，并可用:进行对齐设置，两边都有:则表示居中，若不加:则默认左对齐。</p><table><tr><th>姓名</th><th>性别</th></tr><tr><td>冰羽</td><td>男</td></tr></table><p>关于其它扩展语法可参见具体工具的使用说明。<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;目录&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Markdown是什么？&lt;br&gt;谁创造了它？&lt;br&gt;为什么要使用它？&lt;br&gt;怎么使用？&lt;br&gt;谁在用？&lt;br&gt;尝试一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h3&gt;&lt;h4 id=&quot;1-Markdown是什么？&quot;&gt;&lt;a href=&quot;#1-Markdown是什么？&quot; class=&quot;headerlink&quot; title=&quot;1. Markdown是什么？&quot;&gt;&lt;/a&gt;1. Markdown是什么？&lt;/h4&gt;&lt;p&gt;  Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。&lt;br&gt;  Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。&lt;/p&gt;
&lt;h3 id=&quot;2-谁创造了它？&quot;&gt;&lt;a href=&quot;#2-谁创造了它？&quot; class=&quot;headerlink&quot; title=&quot;2. 谁创造了它？&quot;&gt;&lt;/a&gt;2. 谁创造了它？&lt;/h3&gt;&lt;p&gt;  它由Aaron Swartz和John Gruber共同设计，Aaron Swartz就是那位于去年（2013年1月11日）自杀,有着开挂一般人生经历的程序员。维基百科对他的介绍是：软件工程师、作家、政治组织者、互联网活动家、维基百科人。&lt;/p&gt;
&lt;p&gt;  他有着足以让你跪拜的人生经历：&lt;/p&gt;
&lt;p&gt;  14岁参与RSS 1.0规格标准的制订。&lt;br&gt;  2004年入读斯坦福，之后退学。&lt;br&gt;  2005年创建Infogami，之后与Reddit合并成为其合伙人。&lt;br&gt;  2010年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。&lt;br&gt;  2011年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。&lt;br&gt;  2013年1月自杀身亡。&lt;/p&gt;
&lt;p&gt;  &lt;img src=&quot;/images/aaronSwartz.jpg&quot; alt=&quot;Aaron Swartz&quot;&gt;&lt;br&gt;天才都有早逝的归途。&lt;/p&gt;
&lt;h3 id=&quot;3-为什么要使用它？&quot;&gt;&lt;a href=&quot;#3-为什么要使用它？&quot; class=&quot;headerlink&quot; title=&quot;3. 为什么要使用它？&quot;&gt;&lt;/a&gt;3. 为什么要使用它？&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;它是易读（看起来舒服）、易写（语法简单）、易更改纯文本。处处体现着极简主义的影子。&lt;/li&gt;
&lt;li&gt;兼容HTML，可以转换为HTML格式发布。&lt;/li&gt;
&lt;li&gt;跨平台使用。&lt;/li&gt;
&lt;li&gt;越来越多的网站支持Markdown。&lt;/li&gt;
&lt;li&gt;更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）&lt;/li&gt;
&lt;li&gt;摆脱Word（我不是认真的）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;4-怎么使用？&quot;&gt;&lt;a href=&quot;#4-怎么使用？&quot; class=&quot;headerlink&quot; title=&quot;4. 怎么使用？&quot;&gt;&lt;/a&gt;4. 怎么使用？&lt;/h3&gt;&lt;p&gt;如果不算扩展，Markdown的语法绝对简单到让你爱不释手。&lt;/p&gt;
&lt;p&gt;Markdown语法主要分为如下几大部分：&lt;br&gt;标题，段落，区块引用，代码区块，强调，列表，分割线，链接，图片，反斜杠 \，符号’`’。&lt;/p&gt;
&lt;p&gt;4.1 标题&lt;br&gt;两种形式：&lt;br&gt;1）使用=和-标记一级和二级标题。&lt;/p&gt;
&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a&gt;二级标题&lt;/h2&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;h1 id=&quot;一级标题-1&quot;&gt;&lt;a href=&quot;#一级标题-1&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题-1&quot;&gt;&lt;a href=&quot;#二级标题-1&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a&gt;二级标题&lt;/h2&gt;&lt;p&gt;2）使用#，可表示1-6级标题，记得#后面要加空格。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;###### 六级标题
# 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;h1 id=&quot;一级标题-2&quot;&gt;&lt;a href=&quot;#一级标题-2&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题-2&quot;&gt;&lt;a href=&quot;#二级标题-2&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a&gt;二级标题&lt;/h2&gt;&lt;h3 id=&quot;三级标题&quot;&gt;&lt;a href=&quot;#三级标题&quot; class=&quot;headerlink&quot; title=&quot;三级标题&quot;&gt;&lt;/a&gt;三级标题&lt;/h3&gt;&lt;h4 id=&quot;四级标题&quot;&gt;&lt;a href=&quot;#四级标题&quot; class=&quot;headerlink&quot; title=&quot;四级标题&quot;&gt;&lt;/a&gt;四级标题&lt;/h4&gt;&lt;h5 id=&quot;五级标题&quot;&gt;&lt;a href=&quot;#五级标题&quot; class=&quot;headerlink&quot; title=&quot;五级标题&quot;&gt;&lt;/a&gt;五级标题&lt;/h5&gt;&lt;h6 id=&quot;六级标题&quot;&gt;&lt;a href=&quot;#六级标题&quot; class=&quot;headerlink&quot; title=&quot;六级标题&quot;&gt;&lt;/a&gt;六级标题&lt;/h6&gt;&lt;h3 id=&quot;4-2-段落&quot;&gt;&lt;a href=&quot;#4-2-段落&quot; class=&quot;headerlink&quot; title=&quot;4.2 段落&quot;&gt;&lt;/a&gt;4.2 段落&lt;/h3&gt;&lt;p&gt;段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）。&lt;/p&gt;
&lt;h3 id=&quot;4-3-区块引用&quot;&gt;&lt;a href=&quot;#4-3-区块引用&quot; class=&quot;headerlink&quot; title=&quot;4.3 区块引用&quot;&gt;&lt;/a&gt;4.3 区块引用&lt;/h3&gt;&lt;p&gt;在段落的每行或者只在第一行使用符号&amp;gt;,还可使用多个嵌套引用，如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; 区块引用
&amp;gt;&amp;gt; 嵌套引用
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;区块引用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;嵌套引用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;4-4-代码区块-注意-需要和普通段落之间存在空行。&quot;&gt;&lt;a href=&quot;#4-4-代码区块-注意-需要和普通段落之间存在空行。&quot; class=&quot;headerlink&quot; title=&quot;4.4 代码区块,注意:需要和普通段落之间存在空行。&quot;&gt;&lt;/a&gt;4.4 代码区块,注意:需要和普通段落之间存在空行。&lt;/h3&gt;&lt;p&gt;代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如&lt;br&gt;普通段落：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;void main()
{
printf(“Hello, Markdown.”);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;代码区块：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;void main()
{
    printf(&amp;quot;Hello, Markdown.&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;4-5-强调&quot;&gt;&lt;a href=&quot;#4-5-强调&quot; class=&quot;headerlink&quot; title=&quot;4.5 强调&quot;&gt;&lt;/a&gt;4.5 强调&lt;/h3&gt;&lt;p&gt;在强调内容两侧分别加上*或者_，如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*斜体*，_斜体_
**粗体**，__粗体__
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;斜体&lt;/em&gt;，_体_&lt;br&gt;&lt;strong&gt;粗体&lt;/strong&gt;，&lt;strong&gt;粗体&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-6-列表&quot;&gt;&lt;a href=&quot;#4-6-列表&quot; class=&quot;headerlink&quot; title=&quot;4.6 列表&quot;&gt;&lt;/a&gt;4.6 列表&lt;/h3&gt;&lt;p&gt;使用·、+、或-标记无序列表，如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-（+*） 第一项
-（+*） 第二项
-（+*）第三项
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;注意：标记后面最少有一个_空格_或制表符。若不在引用区块中，必须和前方段落之间存在空行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一项&lt;/li&gt;
&lt;li&gt;第二项&lt;/li&gt;
&lt;li&gt;第三项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有序列表的标记方式是将上述的符号换成数字,并辅以.，如：&lt;br&gt;        1 . 第一项&lt;br&gt;        2 . 第二项&lt;br&gt;        3 . 第三项&lt;/p&gt;
&lt;p&gt;效果：&lt;br&gt;1 . 第一项&lt;br&gt;2 . 第二项&lt;br&gt;3 . 第三项&lt;br&gt;4.7 分割线&lt;br&gt;分割线最常使用就是三个或以上*，还可以使用-和_。&lt;/p&gt;
&lt;p&gt;4.8 链接&lt;br&gt;链接可以由两种形式生成：&lt;strong&gt;行内式&lt;/strong&gt; 和 &lt;strong&gt;参考式&lt;/strong&gt;。&lt;br&gt;行内式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[younghz的Markdown库](https:://github.com/younghz/Markdown “Markdown”)。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https:://github.com/younghz/Markdown “Markdown”&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;younghz的Markdown库&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;参考式：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[younghz的Markdown库1][1]&lt;br&gt;[younghz的Markdown库2][2]&lt;br&gt;[1]:https:://github.com/younghz/Markdown “Markdown”&lt;br&gt;[2]:https:://github.com/younghz/Markdown “Markdown”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;p&gt;[1]:https:://github.com/younghz/Markdown “Markdown”&lt;br&gt;[2]:https:://github.com/younghz/Markdown “Markdown”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意：上述的[1]:https:://github.com/younghz/Markdown “Markdown”不出现在区块中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;4-9-图片&quot;&gt;&lt;a href=&quot;#4-9-图片&quot; class=&quot;headerlink&quot; title=&quot;4.9 图片&quot;&gt;&lt;/a&gt;4.9 图片&lt;/h3&gt;&lt;p&gt;添加图片的形式和链接相似，只需在链接的基础上前方加一个！。&lt;/p&gt;
&lt;h3 id=&quot;4-10-反斜杠&quot;&gt;&lt;a href=&quot;#4-10-反斜杠&quot; class=&quot;headerlink&quot; title=&quot;4.10 反斜杠\&quot;&gt;&lt;/a&gt;4.10 反斜杠\&lt;/h3&gt;&lt;p&gt;相当于反转义作用。使符号成为普通符号。&lt;/p&gt;
&lt;h3 id=&quot;4-11-符号’-’&quot;&gt;&lt;a href=&quot;#4-11-符号’-’&quot; class=&quot;headerlink&quot; title=&quot;4.11 符号’`’&quot;&gt;&lt;/a&gt;4.11 符号’`’&lt;/h3&gt;&lt;p&gt;起到标记作用。如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`ctrl+a`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;p&gt;ctrl+a&lt;/p&gt;
&lt;h3 id=&quot;5-谁在用？&quot;&gt;&lt;a href=&quot;#5-谁在用？&quot; class=&quot;headerlink&quot; title=&quot;5. 谁在用？&quot;&gt;&lt;/a&gt;5. 谁在用？&lt;/h3&gt;&lt;p&gt;Markdown的使用者：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub&lt;/li&gt;
&lt;li&gt;简书&lt;/li&gt;
&lt;li&gt;Stack Overflow&lt;/li&gt;
&lt;li&gt;Apollo&lt;/li&gt;
&lt;li&gt;Moodle&lt;/li&gt;
&lt;li&gt;Reddit&lt;br&gt;等等 …….&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;尝试一下&quot;&gt;&lt;a href=&quot;#尝试一下&quot; class=&quot;headerlink&quot; title=&quot;. 尝试一下&quot;&gt;&lt;/a&gt;. 尝试一下&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Chrome&lt;/strong&gt;下的插件诸如stackedit与markdown-here等非常方便，也不用担心平台受限。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在线的dillinger.io&lt;/strong&gt;评价也不错&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windowns&lt;/strong&gt;下的MarkdownPad也用过，不过免费版的体验不是很好。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;下的Mou是国人贡献的，口碑很好。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;下的ReText不错。&lt;br&gt;&lt;strong&gt;当然，最终境界永远都是笔下是语法，心中格式化 :)。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。&lt;br&gt;虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber]&lt;br&gt;(&lt;a href=&quot;http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/&lt;/a&gt; )。&lt;/p&gt;
&lt;p&gt;以上基本是所有traditonal markdown的语法。&lt;/p&gt;
&lt;p&gt;其它：&lt;/p&gt;
&lt;p&gt;列表的使用(非traditonal markdown)：&lt;/p&gt;
&lt;p&gt;用|表示表格纵向边界，表头和表内容用-隔开，并可用:进行对齐设置，两边都有:则表示居中，若不加:则默认左对齐。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;姓名&lt;/th&gt;&lt;th&gt;性别&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;冰羽&lt;/td&gt;&lt;td&gt;男&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;关于其它扩展语法可参见具体工具的使用说明。&lt;br&gt;
    
    </summary>
    
      <category term="Markdown 基本语法" scheme="http://yoursite.com/categories/Markdown-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    
      <category term="文案编写" scheme="http://yoursite.com/categories/Markdown-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/%E6%96%87%E6%A1%88%E7%BC%96%E5%86%99/"/>
    
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>免费的电子书网站和书推荐</title>
    <link href="http://yoursite.com/2019/06/13/post/"/>
    <id>http://yoursite.com/2019/06/13/post/</id>
    <published>2019-06-13T12:46:25.000Z</published>
    <updated>2019-06-13T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>《bookset》<br>网址：<a href="https://bookset.me/" target="_blank" rel="noopener">https://bookset.me/</a></p><p>描述：<br>    这个网站可以免费下载各种书籍有开发的还有其他的书可以直接点击下载，<br>    但是有些新的开发书籍是没有的，我看中的一点就是可以免费下载。</p><p>《我的小书屋》<br>网址：<a href="http://mebook.cc/" target="_blank" rel="noopener">http://mebook.cc/</a></p><p>描述：<br>    这个网站下载只能是百度网盘，微软云盘，天翼云盘(推荐) 如果公司网络有限制下不了，<br>    用自己的网络下载就可以，这个包括的种类也还行：畅销小说 网络小说 合集资源 多看专区 杂志·期刊 漫画 工具书 原版书籍 轻小说</p><p>书名推荐<br>入门书籍<br>《JavaScript Dom编程艺术》<br>《JavaScript权威指南》</p><p>初级书籍<br>《JavaScript高级程序设计》<br>《高性能JavaScript》<br>《JavaScript语言精髓与编程实践》</p><p>中级书籍<br>《JavaScript DOM高级程序设计》<br>《JavaScript设计模式》<br>最后</p><p>目录导航<br>写在前面<br>本文转自:<a href="http://blog.csdn.net/yangnihaozan/article/details/48294545" target="_blank" rel="noopener">http://blog.csdn.net/yangnihaozan/article/details/48294545</a></p><p>在当下，极多的程序员是通过自学来完成入门以及提升的。对于JavaScript的学习来说，同样不例外。许多新手入门javascript选择通过视频教程或者论坛交流的方式进行学习，这种方式固然较为轻松和便捷，但在知识的获取上有些碎片化，对于新手来说不是很好。</p><p>在javascript的入门阶段，通过书籍来学习对于新手来说才是最好的手段。书籍的学习固然比较枯燥，但是也是最权威，最系统化的，对于新手来说能够快速的完成基础知识的奠基，而对于之后进一步的提升也是大有裨益。这里笔者就结合自身经验为各位javascript新手推荐几本不容错过的javascript书籍。</p><p>目录导航<br>入门书籍<br>看完之后基本就能够完成一个新手到入门的过程了，能够掌握JS基础语法知识和DOM基础知识，读懂接下来笔者推荐的初级书籍。</p><p>《JavaScript Dom编程艺术》<br>此书从JS的历史到JS基础语法知识再到M介绍和简单的使用都比较详尽，内容对于新手来说，简洁、实用、详细、易懂。书不厚，相信很快就能看完。</p><p>《JavaScript权威指南》<br>听名字就知道十分强大。网上关于此书的评价很多，意思大概都是说这书就是一个JS的文档手册。如果学习，记得看最新一版的内容。</p><p>js语言有别于传统面向对象语言，所以还是从基础开始看起比较好。以上两本结束之后，就可以来看一些初级的了。这里笔者对初级的定义为“能在中级和高级开发的指导下完成工作。”</p><p>目录导航<br>初级书籍<br>笔者对初级的定义为“能在中级和高级开发的指导下完成工作。”相比于入门书籍，在关注基础知识的同时，开始讲述一些较为深入的东西。在这个阶段，合适的书有以下几本。</p><p>《JavaScript高级程序设计》<br>此书的作者是Nicholas C.Zakas,雅虎的前端工程师，YUI的代码贡献者，本书的含金量可想而知，事实上他出的书也确实广受好评，拥簇者众多。</p><p>阅读本书只要有JS基础语法知识和DOM基础知识就行，而且本书开始阶段还是介绍JS和DOM的语法知识。笔者这里重点推荐一下第五章(类型),第六章(OOP),第七章(匿名),个人感觉这几章是本书的精华所在，多看几遍,至少要完全看明白，能为以后进阶打好基础。</p><p>《高性能JavaScript》<br>这本书还是Nicholas C.Zakas所著，经典之作，书中大量举例了各种不同写法的JavaScript在浏览器中的性能情况，对规范JavaScript代码和提升性能有很好的帮助，最后提到了很多工具和性能测试的方法，都是非常有实际作用的，尤其对于初学者来说，看完后提升效果明显。</p><p>《JavaScript语言精髓与编程实践》<br>本书与上面的那本在内容上有些重叠，但仍然值得一看。因为本书对JS语言本质的描述非常到位，可以说是介绍JavaScript语言本质的权威书籍，从 “对象”，“函数”，“继承”，“数组”等等多个重要知识着手，多看几遍，每一遍都会有新收获。</p><p>目录导航<br>中级书籍<br>笔者对中级的定义为“能独立或在较少的指导下完成工作，并且对产品与项目有自己的看法。”这个阶段的书籍深入且复杂，要耐心的思考才能读懂，当然获得的提升不言而喻。</p><p>《JavaScript DOM高级程序设计》<br>本书的翻译一般，代码也有少许错误，可是这不影响这本书的强大，通过学习本书，可以理解一个JS的库如何产生，自己动手写一个简单的自己的JS库</p><p>，如果你打算研究其他的JS库或者正在研究其他的JS库，那么这本书会使你的理解 达到新的高度，进阶高级必读，写库必读。</p><p>《JavaScript设计模式》<br>本书对JS的“模仿接口”，“封装”，“继承”，“链式调用”，“工厂模式”等各种具体的设计模式及其在JavaScript语言中的应用进行了详细的介绍，运用设计模式使代码更模块化、更高效并且更易维护。</p><p>目录导航<br>最后<br>以上的书籍是一个从基础到入门，从入门的提升的过程，也是笔者的经验总结。对于新手入门javascript来说，自认为帮助不小，能够少走一些弯路。对于语言掌握其实是一个无止尽的过程，没有终点。即使在你掌握了较为深入的程度后，笔者仍然建议去回过头来重新阅读这些书籍，必然还会有新的收获。</p><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《bookset》&lt;br&gt;网址：&lt;a href=&quot;https://bookset.me/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://bookset.me/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;描述：&lt;br&gt;    这个网站可以免费下载各种书籍有开发的还有其他的书可以直接点击下载，&lt;br&gt;    但是有些新的开发书籍是没有的，我看中的一点就是可以免费下载。&lt;/p&gt;
&lt;p&gt;《我的小书屋》&lt;br&gt;网址：&lt;a href=&quot;http://mebook.cc/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://mebook.cc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;描述：&lt;br&gt;    这个网站下载只能是百度网盘，微软云盘，天翼云盘(推荐) 如果公司网络有限制下不了，&lt;br&gt;    用自己的网络下载就可以，这个包括的种类也还行：畅销小说 网络小说 合集资源 多看专区 杂志·期刊 漫画 工具书 原版书籍 轻小说&lt;/p&gt;
&lt;p&gt;书名推荐&lt;br&gt;入门书籍&lt;br&gt;《JavaScript Dom编程艺术》&lt;br&gt;《JavaScript权威指南》&lt;/p&gt;
&lt;p&gt;初级书籍&lt;br&gt;《JavaScript高级程序设计》&lt;br&gt;《高性能JavaScript》&lt;br&gt;《JavaScript语言精髓与编程实践》&lt;/p&gt;
&lt;p&gt;中级书籍&lt;br&gt;《JavaScript DOM高级程序设计》&lt;br&gt;《JavaScript设计模式》&lt;br&gt;最后&lt;/p&gt;
&lt;p&gt;目录导航&lt;br&gt;写在前面&lt;br&gt;本文转自:&lt;a href=&quot;http://blog.csdn.net/yangnihaozan/article/details/48294545&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://blog.csdn.net/yangnihaozan/article/details/48294545&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在当下，极多的程序员是通过自学来完成入门以及提升的。对于JavaScript的学习来说，同样不例外。许多新手入门javascript选择通过视频教程或者论坛交流的方式进行学习，这种方式固然较为轻松和便捷，但在知识的获取上有些碎片化，对于新手来说不是很好。&lt;/p&gt;
&lt;p&gt;在javascript的入门阶段，通过书籍来学习对于新手来说才是最好的手段。书籍的学习固然比较枯燥，但是也是最权威，最系统化的，对于新手来说能够快速的完成基础知识的奠基，而对于之后进一步的提升也是大有裨益。这里笔者就结合自身经验为各位javascript新手推荐几本不容错过的javascript书籍。&lt;/p&gt;
&lt;p&gt;目录导航&lt;br&gt;入门书籍&lt;br&gt;看完之后基本就能够完成一个新手到入门的过程了，能够掌握JS基础语法知识和DOM基础知识，读懂接下来笔者推荐的初级书籍。&lt;/p&gt;
&lt;p&gt;《JavaScript Dom编程艺术》&lt;br&gt;此书从JS的历史到JS基础语法知识再到M介绍和简单的使用都比较详尽，内容对于新手来说，简洁、实用、详细、易懂。书不厚，相信很快就能看完。&lt;/p&gt;
&lt;p&gt;《JavaScript权威指南》&lt;br&gt;听名字就知道十分强大。网上关于此书的评价很多，意思大概都是说这书就是一个JS的文档手册。如果学习，记得看最新一版的内容。&lt;/p&gt;
&lt;p&gt;js语言有别于传统面向对象语言，所以还是从基础开始看起比较好。以上两本结束之后，就可以来看一些初级的了。这里笔者对初级的定义为“能在中级和高级开发的指导下完成工作。”&lt;/p&gt;
&lt;p&gt;目录导航&lt;br&gt;初级书籍&lt;br&gt;笔者对初级的定义为“能在中级和高级开发的指导下完成工作。”相比于入门书籍，在关注基础知识的同时，开始讲述一些较为深入的东西。在这个阶段，合适的书有以下几本。&lt;/p&gt;
&lt;p&gt;《JavaScript高级程序设计》&lt;br&gt;此书的作者是Nicholas C.Zakas,雅虎的前端工程师，YUI的代码贡献者，本书的含金量可想而知，事实上他出的书也确实广受好评，拥簇者众多。&lt;/p&gt;
&lt;p&gt;阅读本书只要有JS基础语法知识和DOM基础知识就行，而且本书开始阶段还是介绍JS和DOM的语法知识。笔者这里重点推荐一下第五章(类型),第六章(OOP),第七章(匿名),个人感觉这几章是本书的精华所在，多看几遍,至少要完全看明白，能为以后进阶打好基础。&lt;/p&gt;
&lt;p&gt;《高性能JavaScript》&lt;br&gt;这本书还是Nicholas C.Zakas所著，经典之作，书中大量举例了各种不同写法的JavaScript在浏览器中的性能情况，对规范JavaScript代码和提升性能有很好的帮助，最后提到了很多工具和性能测试的方法，都是非常有实际作用的，尤其对于初学者来说，看完后提升效果明显。&lt;/p&gt;
&lt;p&gt;《JavaScript语言精髓与编程实践》&lt;br&gt;本书与上面的那本在内容上有些重叠，但仍然值得一看。因为本书对JS语言本质的描述非常到位，可以说是介绍JavaScript语言本质的权威书籍，从 “对象”，“函数”，“继承”，“数组”等等多个重要知识着手，多看几遍，每一遍都会有新收获。&lt;/p&gt;
&lt;p&gt;目录导航&lt;br&gt;中级书籍&lt;br&gt;笔者对中级的定义为“能独立或在较少的指导下完成工作，并且对产品与项目有自己的看法。”这个阶段的书籍深入且复杂，要耐心的思考才能读懂，当然获得的提升不言而喻。&lt;/p&gt;
&lt;p&gt;《JavaScript DOM高级程序设计》&lt;br&gt;本书的翻译一般，代码也有少许错误，可是这不影响这本书的强大，通过学习本书，可以理解一个JS的库如何产生，自己动手写一个简单的自己的JS库&lt;/p&gt;
&lt;p&gt;，如果你打算研究其他的JS库或者正在研究其他的JS库，那么这本书会使你的理解 达到新的高度，进阶高级必读，写库必读。&lt;/p&gt;
&lt;p&gt;《JavaScript设计模式》&lt;br&gt;本书对JS的“模仿接口”，“封装”，“继承”，“链式调用”，“工厂模式”等各种具体的设计模式及其在JavaScript语言中的应用进行了详细的介绍，运用设计模式使代码更模块化、更高效并且更易维护。&lt;/p&gt;
&lt;p&gt;目录导航&lt;br&gt;最后&lt;br&gt;以上的书籍是一个从基础到入门，从入门的提升的过程，也是笔者的经验总结。对于新手入门javascript来说，自认为帮助不小，能够少走一些弯路。对于语言掌握其实是一个无止尽的过程，没有终点。即使在你掌握了较为深入的程度后，笔者仍然建议去回过头来重新阅读这些书籍，必然还会有新的收获。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="艺术" scheme="http://yoursite.com/tags/%E8%89%BA%E6%9C%AF/"/>
    
      <category term="书法" scheme="http://yoursite.com/tags/%E4%B9%A6%E6%B3%95/"/>
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="个人空间" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E7%A9%BA%E9%97%B4/"/>
    
  </entry>
  
  <entry>
    <title>分享一篇心灵鸡汤</title>
    <link href="http://yoursite.com/2019/05/24/%E8%AE%B0%E5%BD%95%E5%89%8D%E7%AB%AF%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BA%8B/"/>
    <id>http://yoursite.com/2019/05/24/记录前端的一些事/</id>
    <published>2019-05-24T10:01:00.000Z</published>
    <updated>2019-06-14T02:53:02.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>只有放下，才能重新开始</p></blockquote><h2 id="我是演说家"><a href="#我是演说家" class="headerlink" title="我是演说家"></a>我是演说家</h2><p>Take Me Home,Country Roads<br>John Denver - Take Me Home Country Roads</p><p>来源：净物（ID：cystyle001）<br>图片：微博@加州夏扇</p><p>生而为人，烦恼总是相伴的。一旦纠结于自己无可奈何的事，便会痛苦不堪。想明白了，你就不会那么累了。</p><p>对过去，要淡。</p><p>你是否因为别人的想法，一而再地委屈自己？你是否因为他人做错的事情，一直耿耿于怀？你是否因为一段不再有可能的感情，久久不能释怀？</p><p>仔细想想，其实我们每个人都有这样的时候。虽然你竭尽所能，还是可能会遭遇工作的低谷、生活的窘迫、情感的失意、学业的压力……</p><p>不知你有没有听过这句话：“不要在一件别扭的事上纠缠太久。纠缠久了，你会烦，会痛，会厌，会累，会神伤，会心碎。实际上，到最后，你不是跟事过不去，而是跟自己过不去。无论多别扭，你都要学会抽身而退。”</p><p>曾看过这样一个故事：一个人上火车时不小心掉了一只新鞋，等火车开动了他才发现。这时，他毫不犹豫地把另一只鞋也从窗口扔了出去。其他乘客很不理解，他解释说，那双鞋不论多么昂贵，对他而言都已经失去作用了，而捡到这双鞋的人就不同了。所以，与其留一只对自己无用的鞋，倒不如选择放弃，或许会成全另一个人呢？</p><p>有些人，有些事，该放手就要放手，该不在乎就不在乎。人生在世，很多事情，只有放下，才能重新开始。<br><a href="https://mmbiz.qpic.cn/mmbiz_jpg/qia9PLAqFQ6PCNCvPKENIpQPdzGufYNtXuu8vJoAPqdk5AoTIO9IIOTnSBORuMAp9QhicCf8buUAuzboiaKtcicLYg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" target="_blank" rel="noopener">https://mmbiz.qpic.cn/mmbiz_jpg/qia9PLAqFQ6PCNCvPKENIpQPdzGufYNtXuu8vJoAPqdk5AoTIO9IIOTnSBORuMAp9QhicCf8buUAuzboiaKtcicLYg/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1</a><br><img src="/images/image.png" alt="overwrote existing file"><br>对未来，要信。</p><p>人这一辈子，总是不知不觉背了很多压力。常听到有人抱怨：对未来感到迷茫，觉得生活没有期盼。</p><p>其实，大家都一样，谁都迷茫过。不同的是，有些人把迷茫化作动力，把欲望化作能力，把苦难熬成光明。</p><p>关于未来，你要相信，只要努力坚持下去，就有可能看到光明。</p><p>曾听过这样一句话：我们一步步走下去，踏踏实实地去走，不抗拒命运交给我们的重负，才是一个勇者。</p><p>即使经历很多艰难困苦，依然积极面对生活；即使被嘲笑被冷落，依然选择坚持自己的梦想。</p><p>生活从来不会亏待认真努力的人，哪怕前方再多艰难险阻，只要你勇敢往前跑，就一定能看到阳光。<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;只有放下，才能重新开始&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;我是演说家&quot;&gt;&lt;a href=&quot;#我是演说家&quot; class=&quot;headerlink&quot; title=&quot;我是演说家&quot;&gt;&lt;/a&gt;我是演说家&lt;/h2&gt;&lt;p&gt;Take Me Home,Country Roads&lt;br&gt;John Denver - Take Me Home Country Roads&lt;/p&gt;
&lt;p&gt;来源：净物（ID：cystyle001）&lt;br&gt;图片：微博@加州夏扇&lt;/p&gt;
&lt;p&gt;生而为人，烦恼总是相伴的。一旦纠结于自己无可奈何的事，便会痛苦不堪。想明白了，你就不会那么累了。&lt;/p&gt;
&lt;p&gt;对过去，要淡。&lt;/p&gt;
&lt;p&gt;你是否因为别人的想法，一而再地委屈自己？你是否因为他人做错的事情，一直耿耿于怀？你是否因为一段不再有可能的感情，久久不能释怀？&lt;/p&gt;
&lt;p&gt;仔细想想，其实我们每个人都有这样的时候。虽然你竭尽所能，还是可能会遭遇工作的低谷、生活的窘迫、情感的失意、学业的压力……&lt;/p&gt;
&lt;p&gt;不知你有没有听过这句话：“不要在一件别扭的事上纠缠太久。纠缠久了，你会烦，会痛，会厌，会累，会神伤，会心碎。实际上，到最后，你不是跟事过不去，而是跟自己过不去。无论多别扭，你都要学会抽身而退。”&lt;/p&gt;
&lt;p&gt;曾看过这样一个故事：一个人上火车时不小心掉了一只新鞋，等火车开动了他才发现。这时，他毫不犹豫地把另一只鞋也从窗口扔了出去。其他乘客很不理解，他解释说，那双鞋不论多么昂贵，对他而言都已经失去作用了，而捡到这双鞋的人就不同了。所以，与其留一只对自己无用的鞋，倒不如选择放弃，或许会成全另一个人呢？&lt;/p&gt;
&lt;p&gt;有些人，有些事，该放手就要放手，该不在乎就不在乎。人生在世，很多事情，只有放下，才能重新开始。&lt;br&gt;&lt;a href=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/qia9PLAqFQ6PCNCvPKENIpQPdzGufYNtXuu8vJoAPqdk5AoTIO9IIOTnSBORuMAp9QhicCf8buUAuzboiaKtcicLYg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mmbiz.qpic.cn/mmbiz_jpg/qia9PLAqFQ6PCNCvPKENIpQPdzGufYNtXuu8vJoAPqdk5AoTIO9IIOTnSBORuMAp9QhicCf8buUAuzboiaKtcicLYg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;/images/image.png&quot; alt=&quot;overwrote existing file&quot;&gt;&lt;br&gt;对未来，要信。&lt;/p&gt;
&lt;p&gt;人这一辈子，总是不知不觉背了很多压力。常听到有人抱怨：对未来感到迷茫，觉得生活没有期盼。&lt;/p&gt;
&lt;p&gt;其实，大家都一样，谁都迷茫过。不同的是，有些人把迷茫化作动力，把欲望化作能力，把苦难熬成光明。&lt;/p&gt;
&lt;p&gt;关于未来，你要相信，只要努力坚持下去，就有可能看到光明。&lt;/p&gt;
&lt;p&gt;曾听过这样一句话：我们一步步走下去，踏踏实实地去走，不抗拒命运交给我们的重负，才是一个勇者。&lt;/p&gt;
&lt;p&gt;即使经历很多艰难困苦，依然积极面对生活；即使被嘲笑被冷落，依然选择坚持自己的梦想。&lt;/p&gt;
&lt;p&gt;生活从来不会亏待认真努力的人，哪怕前方再多艰难险阻，只要你勇敢往前跑，就一定能看到阳光。&lt;br&gt;
    
    </summary>
    
      <category term="我是演说家系列" scheme="http://yoursite.com/categories/%E6%88%91%E6%98%AF%E6%BC%94%E8%AF%B4%E5%AE%B6%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="鸡汤" scheme="http://yoursite.com/tags/%E9%B8%A1%E6%B1%A4/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/05/22/hello-world/"/>
    <id>http://yoursite.com/2019/05/22/hello-world/</id>
    <published>2019-05-22T07:28:54.000Z</published>
    <updated>2019-05-22T07:28:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a><br>comments: true</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
